{% macro method_decl(m) -%}
    {{ "static" if m.is_static() else "" }}
    {{ m.return_value.cpp_type() }}
    {{ m.get_name() }}(
        {% for pname, ptype in m.params %}
        {{- ptype.cpp_type() }} {{ pname }} {{ "," if not loop.last else "" }}
        {% endfor -%}
    );
{%- endmacro %}

{% macro method_def(cl, m) -%}
{{ m.return_value.cpp_type() }}
{{cl.name}}::{{ m.get_name() }}(
    {% for pname, ptype in m.params %}
    {{- ptype.cpp_type() }} {{ pname }} {{- "," if not loop.last else "" }}
    {% endfor -%}
)
{%- endmacro %}

{% macro signal_decl(cl, m) -%}
    using {{ m.get_name() }}_T = std::function<
        {{ m.return_value.cpp_type() }}(
        {{ cl.c_type }} *
        {%- for pname, ptype in m.params %}
        , {{ ptype.cpp_type() }} {{ pname }}
        {% endfor -%}
        )>;

    guint on_{{ m.get_name() }}({{ m.get_name() }}_T);
{%- endmacro %}
