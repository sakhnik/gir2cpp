{%- import "common.hpp.in" as common %}

#include "{{ cls_.name }}.hpp"
{% for ns, cl in cls_.get_forward_decls() -%}
#include "{{ ns + '/' + cl }}.hpp"
{% endfor %}

namespace gir {
namespace {{ cls_.namespace.name }} {

{% for m in cls_.methods.values() %}
{{ common.method_def(cls_, m) }}
{
    {% for p in m.params %}
    {{ p.c_type }} t{{ loop.index0 }} = p{{ loop.index0 }};
    {% endfor -%}

    {% if m.has_return() %}

    {{ m.return_value.c_type }} r = {{ m.c_ident }}(
    {% for p in m.params %}
        t{{ loop.index0 }} {{- "," if not loop.last else "" }}
    {% endfor -%}
    );

    return {{ m.return_value.transform_to_cpp() }}(r);

    {%- else %}

    {{ m.c_ident }}(
    {% for p in m.params %}
        t{{ loop.index0 }} {{- "," if not loop.last else "" }}
    {% endfor -%}

    {% endif %}
}
{% endfor %}

} //namespace {{ cls_.namespace.name }};
} //namespace gir;
